/*
 * generated by Xtext 2.37.0
 */
grammar InternalSensorDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package it.unibo.sensor.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package it.unibo.sensor.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import it.unibo.sensor.dsl.services.SensorDSLGrammarAccess;

}

@parser::members {

 	private SensorDSLGrammarAccess grammarAccess;

    public InternalSensorDSLParser(TokenStream input, SensorDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SensorDefinition";
   	}

   	@Override
   	protected SensorDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSensorDefinition
entryRuleSensorDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorDefinitionRule()); }
	iv_ruleSensorDefinition=ruleSensorDefinition
	{ $current=$iv_ruleSensorDefinition.current; }
	EOF;

// Rule SensorDefinition
ruleSensorDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSensorDefinitionAccess().getSensorSensorParserRuleCall_0());
			}
			lv_sensor_0_0=ruleSensor
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSensorDefinitionRule());
				}
				set(
					$current,
					"sensor",
					lv_sensor_0_0,
					"it.unibo.sensor.dsl.SensorDSL.Sensor");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='name'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensorAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSensorAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='infos'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getInfosKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getInfosGeneralSensorInfoParserRuleCall_5_0());
				}
				lv_infos_5_0=ruleGeneralSensorInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"infos",
						lv_infos_5_0,
						"it.unibo.sensor.dsl.SensorDSL.GeneralSensorInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='network'
		{
			newLeafNode(otherlv_7, grammarAccess.getSensorAccess().getNetworkKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getNetworkGeneralNetworkInfoParserRuleCall_9_0());
				}
				lv_network_9_0=ruleGeneralNetworkInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"network",
						lv_network_9_0,
						"it.unibo.sensor.dsl.SensorDSL.GeneralNetworkInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11='gateway'
		{
			newLeafNode(otherlv_11, grammarAccess.getSensorAccess().getGatewayKeyword_11());
		}
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getGatewayGeneralGatewayInfoParserRuleCall_13_0());
				}
				lv_gateway_13_0=ruleGeneralGatewayInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"gateway",
						lv_gateway_13_0,
						"it.unibo.sensor.dsl.SensorDSL.GeneralGatewayInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_15='registry'
		{
			newLeafNode(otherlv_15, grammarAccess.getSensorAccess().getRegistryKeyword_15());
		}
		otherlv_16='{'
		{
			newLeafNode(otherlv_16, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_16());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getRegistrySensorRegistryInfoParserRuleCall_17_0());
				}
				lv_registry_17_0=ruleSensorRegistryInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"registry",
						lv_registry_17_0,
						"it.unibo.sensor.dsl.SensorDSL.SensorRegistryInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_18());
		}
		otherlv_19='cronjob'
		{
			newLeafNode(otherlv_19, grammarAccess.getSensorAccess().getCronjobKeyword_19());
		}
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_20());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getCronjobGeneralCronjobInfoParserRuleCall_21_0());
				}
				lv_cronjob_21_0=ruleGeneralCronjobInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"cronjob",
						lv_cronjob_21_0,
						"it.unibo.sensor.dsl.SensorDSL.GeneralCronjobInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_22());
		}
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_23());
		}
	)
;

// Entry rule entryRuleGeneralNetworkInfo
entryRuleGeneralNetworkInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralNetworkInfoRule()); }
	iv_ruleGeneralNetworkInfo=ruleGeneralNetworkInfo
	{ $current=$iv_ruleGeneralNetworkInfo.current; }
	EOF;

// Rule GeneralNetworkInfo
ruleGeneralNetworkInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralNetworkInfoAccess().getPortKeyword_0());
		}
		(
			(
				lv_port_1_0=RULE_INT
				{
					newLeafNode(lv_port_1_0, grammarAccess.getGeneralNetworkInfoAccess().getPortINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralNetworkInfoRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='ip'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralNetworkInfoAccess().getIpKeyword_2());
		}
		(
			(
				lv_ip_3_0=RULE_STRING
				{
					newLeafNode(lv_ip_3_0, grammarAccess.getGeneralNetworkInfoAccess().getIpSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralNetworkInfoRule());
					}
					setWithLastConsumed(
						$current,
						"ip",
						lv_ip_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGeneralSensorInfo
entryRuleGeneralSensorInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralSensorInfoRule()); }
	iv_ruleGeneralSensorInfo=ruleGeneralSensorInfo
	{ $current=$iv_ruleGeneralSensorInfo.current; }
	EOF;

// Rule GeneralSensorInfo
ruleGeneralSensorInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralSensorInfoAccess().getDescriptionKeyword_0());
		}
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getGeneralSensorInfoAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralSensorInfoRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralSensorInfoAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralSensorInfoAccess().getTypeTYPESEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleTYPES
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralSensorInfoRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"it.unibo.sensor.dsl.SensorDSL.TYPES");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='queries'
		{
			newLeafNode(otherlv_4, grammarAccess.getGeneralSensorInfoAccess().getQueriesKeyword_4());
		}
		otherlv_5='['
		{
			newLeafNode(otherlv_5, grammarAccess.getGeneralSensorInfoAccess().getLeftSquareBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralSensorInfoAccess().getQueryQueryParserRuleCall_6_0());
				}
				lv_query_6_0=ruleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralSensorInfoRule());
					}
					add(
						$current,
						"query",
						lv_query_6_0,
						"it.unibo.sensor.dsl.SensorDSL.Query");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getGeneralSensorInfoAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleGeneralGatewayInfo
entryRuleGeneralGatewayInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralGatewayInfoRule()); }
	iv_ruleGeneralGatewayInfo=ruleGeneralGatewayInfo
	{ $current=$iv_ruleGeneralGatewayInfo.current; }
	EOF;

// Rule GeneralGatewayInfo
ruleGeneralGatewayInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='url'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralGatewayInfoAccess().getUrlKeyword_0());
		}
		(
			(
				lv_url_1_0=RULE_STRING
				{
					newLeafNode(lv_url_1_0, grammarAccess.getGeneralGatewayInfoAccess().getUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='port'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralGatewayInfoAccess().getPortKeyword_2());
		}
		(
			(
				lv_port_3_0=RULE_INT
				{
					newLeafNode(lv_port_3_0, grammarAccess.getGeneralGatewayInfoAccess().getPortINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='registerRoute'
		{
			newLeafNode(otherlv_4, grammarAccess.getGeneralGatewayInfoAccess().getRegisterRouteKeyword_4());
		}
		(
			(
				lv_register_5_0=RULE_STRING
				{
					newLeafNode(lv_register_5_0, grammarAccess.getGeneralGatewayInfoAccess().getRegisterSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"register",
						lv_register_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='shutdownRoute'
		{
			newLeafNode(otherlv_6, grammarAccess.getGeneralGatewayInfoAccess().getShutdownRouteKeyword_6());
		}
		(
			(
				lv_shutdown_7_0=RULE_STRING
				{
					newLeafNode(lv_shutdown_7_0, grammarAccess.getGeneralGatewayInfoAccess().getShutdownSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"shutdown",
						lv_shutdown_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='detectionRoute'
		{
			newLeafNode(otherlv_8, grammarAccess.getGeneralGatewayInfoAccess().getDetectionRouteKeyword_8());
		}
		(
			(
				lv_detection_9_0=RULE_STRING
				{
					newLeafNode(lv_detection_9_0, grammarAccess.getGeneralGatewayInfoAccess().getDetectionSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"detection",
						lv_detection_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='alertRoute'
		{
			newLeafNode(otherlv_10, grammarAccess.getGeneralGatewayInfoAccess().getAlertRouteKeyword_10());
		}
		(
			(
				lv_alert_11_0=RULE_STRING
				{
					newLeafNode(lv_alert_11_0, grammarAccess.getGeneralGatewayInfoAccess().getAlertSTRINGTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralGatewayInfoRule());
					}
					setWithLastConsumed(
						$current,
						"alert",
						lv_alert_11_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSensorRegistryInfo
entryRuleSensorRegistryInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRegistryInfoRule()); }
	iv_ruleSensorRegistryInfo=ruleSensorRegistryInfo
	{ $current=$iv_ruleSensorRegistryInfo.current; }
	EOF;

// Rule SensorRegistryInfo
ruleSensorRegistryInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='registryUrl'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorRegistryInfoAccess().getRegistryUrlKeyword_0());
		}
		(
			(
				lv_registryUrl_1_0=RULE_STRING
				{
					newLeafNode(lv_registryUrl_1_0, grammarAccess.getSensorRegistryInfoAccess().getRegistryUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRegistryInfoRule());
					}
					setWithLastConsumed(
						$current,
						"registryUrl",
						lv_registryUrl_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='key'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorRegistryInfoAccess().getKeyKeyword_2());
		}
		(
			(
				lv_apiKey_3_0=RULE_STRING
				{
					newLeafNode(lv_apiKey_3_0, grammarAccess.getSensorRegistryInfoAccess().getApiKeySTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRegistryInfoRule());
					}
					setWithLastConsumed(
						$current,
						"apiKey",
						lv_apiKey_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGeneralCronjobInfo
entryRuleGeneralCronjobInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralCronjobInfoRule()); }
	iv_ruleGeneralCronjobInfo=ruleGeneralCronjobInfo
	{ $current=$iv_ruleGeneralCronjobInfo.current; }
	EOF;

// Rule GeneralCronjobInfo
ruleGeneralCronjobInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='from'
				{
					newLeafNode(otherlv_0, grammarAccess.getGeneralCronjobInfoAccess().getFromKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneralCronjobInfoAccess().getFromDAYEnumRuleCall_0_0_1_0());
						}
						lv_from_1_0=ruleDAY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneralCronjobInfoRule());
							}
							set(
								$current,
								"from",
								lv_from_1_0,
								"it.unibo.sensor.dsl.SensorDSL.DAY");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2='to'
				{
					newLeafNode(otherlv_2, grammarAccess.getGeneralCronjobInfoAccess().getToKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneralCronjobInfoAccess().getToDAYEnumRuleCall_0_0_3_0());
						}
						lv_to_3_0=ruleDAY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneralCronjobInfoRule());
							}
							set(
								$current,
								"to",
								lv_to_3_0,
								"it.unibo.sensor.dsl.SensorDSL.DAY");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='every'
				{
					newLeafNode(otherlv_4, grammarAccess.getGeneralCronjobInfoAccess().getEveryKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneralCronjobInfoAccess().getDayDAYEnumRuleCall_0_1_1_0());
						}
						lv_day_5_0=ruleDAY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneralCronjobInfoRule());
							}
							set(
								$current,
								"day",
								lv_day_5_0,
								"it.unibo.sensor.dsl.SensorDSL.DAY");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				(
					(
						lv_type_6_0='at'
						{
							newLeafNode(lv_type_6_0, grammarAccess.getGeneralCronjobInfoAccess().getTypeAtKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
							}
							setWithLastConsumed($current, "type", lv_type_6_0, "at");
						}
					)
				)
				(
					(
						lv_hour_7_0=RULE_INT
						{
							newLeafNode(lv_hour_7_0, grammarAccess.getGeneralCronjobInfoAccess().getHourINTTerminalRuleCall_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
							}
							setWithLastConsumed(
								$current,
								"hour",
								lv_hour_7_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getGeneralCronjobInfoAccess().getColonKeyword_1_0_2());
				}
				(
					(
						lv_minute_9_0=RULE_INT
						{
							newLeafNode(lv_minute_9_0, grammarAccess.getGeneralCronjobInfoAccess().getMinuteINTTerminalRuleCall_1_0_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
							}
							setWithLastConsumed(
								$current,
								"minute",
								lv_minute_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_type_10_0='every'
						{
							newLeafNode(lv_type_10_0, grammarAccess.getGeneralCronjobInfoAccess().getTypeEveryKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
							}
							setWithLastConsumed($current, "type", lv_type_10_0, "every");
						}
					)
				)
				(
					(
						lv_value_11_0=RULE_INT
						{
							newLeafNode(lv_value_11_0, grammarAccess.getGeneralCronjobInfoAccess().getValueINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_11_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					(
						(
							lv_unit_12_1='hours'
							{
								newLeafNode(lv_unit_12_1, grammarAccess.getGeneralCronjobInfoAccess().getUnitHoursKeyword_1_1_2_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
								}
								setWithLastConsumed($current, "unit", lv_unit_12_1, null);
							}
							    |
							lv_unit_12_2='minutes'
							{
								newLeafNode(lv_unit_12_2, grammarAccess.getGeneralCronjobInfoAccess().getUnitMinutesKeyword_1_1_2_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getGeneralCronjobInfoRule());
								}
								setWithLastConsumed($current, "unit", lv_unit_12_2, null);
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getQueryAccess().getHyphenMinusKeyword_0());
		}
		otherlv_1='threshold'
		{
			newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getThresholdKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getQueryAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getComparatorComparatorEnumRuleCall_3_0());
				}
				lv_comparator_3_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_3_0,
						"it.unibo.sensor.dsl.SensorDSL.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_value_4_0=RULE_STRING
				{
					newLeafNode(lv_value_4_0, grammarAccess.getQueryAccess().getValueSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Rule DAY
ruleDAY returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='monday'
			{
				$current = grammarAccess.getDAYAccess().getMondayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDAYAccess().getMondayEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='tuesday'
			{
				$current = grammarAccess.getDAYAccess().getTuesdayEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDAYAccess().getTuesdayEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='wednesday'
			{
				$current = grammarAccess.getDAYAccess().getWednesdayEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDAYAccess().getWednesdayEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='thursday'
			{
				$current = grammarAccess.getDAYAccess().getThursdayEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDAYAccess().getThursdayEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='friday'
			{
				$current = grammarAccess.getDAYAccess().getFridayEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDAYAccess().getFridayEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='saturday'
			{
				$current = grammarAccess.getDAYAccess().getSaturdayEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDAYAccess().getSaturdayEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='sunday'
			{
				$current = grammarAccess.getDAYAccess().getSundayEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDAYAccess().getSundayEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule Comparator
ruleComparator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='>'
			{
				$current = grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<'
			{
				$current = grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TYPES
ruleTYPES returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='idro_level'
			{
				$current = grammarAccess.getTYPESAccess().getHydroEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTYPESAccess().getHydroEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='temp'
			{
				$current = grammarAccess.getTYPESAccess().getTemperatureEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTYPESAccess().getTemperatureEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='humidity'
			{
				$current = grammarAccess.getTYPESAccess().getHumidityEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTYPESAccess().getHumidityEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='wind'
			{
				$current = grammarAccess.getTYPESAccess().getWindEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTYPESAccess().getWindEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='rain'
			{
				$current = grammarAccess.getTYPESAccess().getRainEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTYPESAccess().getRainEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
