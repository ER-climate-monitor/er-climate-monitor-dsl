/**
 * generated by Xtext 2.37.0
 */
package it.unibo.sensor.dsl.sensorDSL.impl;

import it.unibo.sensor.dsl.sensorDSL.SensorDSLPackage;
import it.unibo.sensor.dsl.sensorDSL.SensorRegistryInfo;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sensor Registry Info</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.SensorRegistryInfoImpl#getRegistryUrl <em>Registry Url</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.SensorRegistryInfoImpl#getApiKey <em>Api Key</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SensorRegistryInfoImpl extends MinimalEObjectImpl.Container implements SensorRegistryInfo
{
  /**
   * The default value of the '{@link #getRegistryUrl() <em>Registry Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistryUrl()
   * @generated
   * @ordered
   */
  protected static final String REGISTRY_URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRegistryUrl() <em>Registry Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistryUrl()
   * @generated
   * @ordered
   */
  protected String registryUrl = REGISTRY_URL_EDEFAULT;

  /**
   * The default value of the '{@link #getApiKey() <em>Api Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApiKey()
   * @generated
   * @ordered
   */
  protected static final String API_KEY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getApiKey() <em>Api Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApiKey()
   * @generated
   * @ordered
   */
  protected String apiKey = API_KEY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SensorRegistryInfoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SensorDSLPackage.Literals.SENSOR_REGISTRY_INFO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRegistryUrl()
  {
    return registryUrl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegistryUrl(String newRegistryUrl)
  {
    String oldRegistryUrl = registryUrl;
    registryUrl = newRegistryUrl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.SENSOR_REGISTRY_INFO__REGISTRY_URL, oldRegistryUrl, registryUrl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getApiKey()
  {
    return apiKey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setApiKey(String newApiKey)
  {
    String oldApiKey = apiKey;
    apiKey = newApiKey;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.SENSOR_REGISTRY_INFO__API_KEY, oldApiKey, apiKey));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__REGISTRY_URL:
        return getRegistryUrl();
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__API_KEY:
        return getApiKey();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__REGISTRY_URL:
        setRegistryUrl((String)newValue);
        return;
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__API_KEY:
        setApiKey((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__REGISTRY_URL:
        setRegistryUrl(REGISTRY_URL_EDEFAULT);
        return;
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__API_KEY:
        setApiKey(API_KEY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__REGISTRY_URL:
        return REGISTRY_URL_EDEFAULT == null ? registryUrl != null : !REGISTRY_URL_EDEFAULT.equals(registryUrl);
      case SensorDSLPackage.SENSOR_REGISTRY_INFO__API_KEY:
        return API_KEY_EDEFAULT == null ? apiKey != null : !API_KEY_EDEFAULT.equals(apiKey);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (registryUrl: ");
    result.append(registryUrl);
    result.append(", apiKey: ");
    result.append(apiKey);
    result.append(')');
    return result.toString();
  }

} //SensorRegistryInfoImpl
