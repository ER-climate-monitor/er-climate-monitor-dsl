/**
 * generated by Xtext 2.37.0
 */
package it.unibo.sensor.dsl.sensorDSL.impl;

import it.unibo.sensor.dsl.sensorDSL.DAY;
import it.unibo.sensor.dsl.sensorDSL.GeneralCronjobInfo;
import it.unibo.sensor.dsl.sensorDSL.SensorDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>General Cronjob Info</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getFrom <em>From</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getTo <em>To</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getDay <em>Day</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getHour <em>Hour</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getMinute <em>Minute</em>}</li>
 *   <li>{@link it.unibo.sensor.dsl.sensorDSL.impl.GeneralCronjobInfoImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GeneralCronjobInfoImpl extends MinimalEObjectImpl.Container implements GeneralCronjobInfo
{
  /**
   * The default value of the '{@link #getFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrom()
   * @generated
   * @ordered
   */
  protected static final DAY FROM_EDEFAULT = DAY.MONDAY;

  /**
   * The cached value of the '{@link #getFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrom()
   * @generated
   * @ordered
   */
  protected DAY from = FROM_EDEFAULT;

  /**
   * The default value of the '{@link #getTo() <em>To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTo()
   * @generated
   * @ordered
   */
  protected static final DAY TO_EDEFAULT = DAY.MONDAY;

  /**
   * The cached value of the '{@link #getTo() <em>To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTo()
   * @generated
   * @ordered
   */
  protected DAY to = TO_EDEFAULT;

  /**
   * The default value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected static final DAY DAY_EDEFAULT = DAY.MONDAY;

  /**
   * The cached value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected DAY day = DAY_EDEFAULT;

  /**
   * The default value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected static final int HOUR_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected int hour = HOUR_EDEFAULT;

  /**
   * The default value of the '{@link #getMinute() <em>Minute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinute()
   * @generated
   * @ordered
   */
  protected static final int MINUTE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinute() <em>Minute</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinute()
   * @generated
   * @ordered
   */
  protected int minute = MINUTE_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final int VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected int value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GeneralCronjobInfoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SensorDSLPackage.Literals.GENERAL_CRONJOB_INFO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DAY getFrom()
  {
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFrom(DAY newFrom)
  {
    DAY oldFrom = from;
    from = newFrom == null ? FROM_EDEFAULT : newFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__FROM, oldFrom, from));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DAY getTo()
  {
    return to;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTo(DAY newTo)
  {
    DAY oldTo = to;
    to = newTo == null ? TO_EDEFAULT : newTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__TO, oldTo, to));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DAY getDay()
  {
    return day;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDay(DAY newDay)
  {
    DAY oldDay = day;
    day = newDay == null ? DAY_EDEFAULT : newDay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__DAY, oldDay, day));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getHour()
  {
    return hour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHour(int newHour)
  {
    int oldHour = hour;
    hour = newHour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__HOUR, oldHour, hour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinute()
  {
    return minute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinute(int newMinute)
  {
    int oldMinute = minute;
    minute = newMinute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__MINUTE, oldMinute, minute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(int newValue)
  {
    int oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SensorDSLPackage.GENERAL_CRONJOB_INFO__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__FROM:
        return getFrom();
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__TO:
        return getTo();
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__DAY:
        return getDay();
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__HOUR:
        return getHour();
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__MINUTE:
        return getMinute();
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__FROM:
        setFrom((DAY)newValue);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__TO:
        setTo((DAY)newValue);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__DAY:
        setDay((DAY)newValue);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__HOUR:
        setHour((Integer)newValue);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__MINUTE:
        setMinute((Integer)newValue);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__VALUE:
        setValue((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__FROM:
        setFrom(FROM_EDEFAULT);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__TO:
        setTo(TO_EDEFAULT);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__DAY:
        setDay(DAY_EDEFAULT);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__HOUR:
        setHour(HOUR_EDEFAULT);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__MINUTE:
        setMinute(MINUTE_EDEFAULT);
        return;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__FROM:
        return from != FROM_EDEFAULT;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__TO:
        return to != TO_EDEFAULT;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__DAY:
        return day != DAY_EDEFAULT;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__HOUR:
        return hour != HOUR_EDEFAULT;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__MINUTE:
        return minute != MINUTE_EDEFAULT;
      case SensorDSLPackage.GENERAL_CRONJOB_INFO__VALUE:
        return value != VALUE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (from: ");
    result.append(from);
    result.append(", to: ");
    result.append(to);
    result.append(", day: ");
    result.append(day);
    result.append(", hour: ");
    result.append(hour);
    result.append(", minute: ");
    result.append(minute);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //GeneralCronjobInfoImpl
