/*
 * generated by Xtext 2.37.0
 */
grammar InternalSensorDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package it.unibo.sensor.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unibo.sensor.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.unibo.sensor.dsl.services.SensorDSLGrammarAccess;

}
@parser::members {
	private SensorDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(SensorDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSensorDefinition
entryRuleSensorDefinition
:
{ before(grammarAccess.getSensorDefinitionRule()); }
	 ruleSensorDefinition
{ after(grammarAccess.getSensorDefinitionRule()); } 
	 EOF 
;

// Rule SensorDefinition
ruleSensorDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorDefinitionAccess().getSensorAssignment()); }
		(rule__SensorDefinition__SensorAssignment)
		{ after(grammarAccess.getSensorDefinitionAccess().getSensorAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralNetworkInfo
entryRuleGeneralNetworkInfo
:
{ before(grammarAccess.getGeneralNetworkInfoRule()); }
	 ruleGeneralNetworkInfo
{ after(grammarAccess.getGeneralNetworkInfoRule()); } 
	 EOF 
;

// Rule GeneralNetworkInfo
ruleGeneralNetworkInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralNetworkInfoAccess().getGroup()); }
		(rule__GeneralNetworkInfo__Group__0)
		{ after(grammarAccess.getGeneralNetworkInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralSensorInfo
entryRuleGeneralSensorInfo
:
{ before(grammarAccess.getGeneralSensorInfoRule()); }
	 ruleGeneralSensorInfo
{ after(grammarAccess.getGeneralSensorInfoRule()); } 
	 EOF 
;

// Rule GeneralSensorInfo
ruleGeneralSensorInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralSensorInfoAccess().getGroup()); }
		(rule__GeneralSensorInfo__Group__0)
		{ after(grammarAccess.getGeneralSensorInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralGatewayInfo
entryRuleGeneralGatewayInfo
:
{ before(grammarAccess.getGeneralGatewayInfoRule()); }
	 ruleGeneralGatewayInfo
{ after(grammarAccess.getGeneralGatewayInfoRule()); } 
	 EOF 
;

// Rule GeneralGatewayInfo
ruleGeneralGatewayInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getGroup()); }
		(rule__GeneralGatewayInfo__Group__0)
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralCronjobInfo
entryRuleGeneralCronjobInfo
:
{ before(grammarAccess.getGeneralCronjobInfoRule()); }
	 ruleGeneralCronjobInfo
{ after(grammarAccess.getGeneralCronjobInfoRule()); } 
	 EOF 
;

// Rule GeneralCronjobInfo
ruleGeneralCronjobInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getGroup()); }
		(rule__GeneralCronjobInfo__Group__0)
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DAY
ruleDAY
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAYAccess().getAlternatives()); }
		(rule__DAY__Alternatives)
		{ after(grammarAccess.getDAYAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Comparator
ruleComparator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getAlternatives()); }
		(rule__Comparator__Alternatives)
		{ after(grammarAccess.getComparatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TYPES
ruleTYPES
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTYPESAccess().getAlternatives()); }
		(rule__TYPES__Alternatives)
		{ after(grammarAccess.getTYPESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getGroup_0_0()); }
		(rule__GeneralCronjobInfo__Group_0_0__0)
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getGroup_0_1()); }
		(rule__GeneralCronjobInfo__Group_0_1__0)
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getGroup_1_0()); }
		(rule__GeneralCronjobInfo__Group_1_0__0)
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getGroup_1_1()); }
		(rule__GeneralCronjobInfo__Group_1_1__0)
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Alternatives_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getHoursKeyword_1_1_2_0()); }
		'hours'
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getHoursKeyword_1_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getMinutesKeyword_1_1_2_1()); }
		'minutes'
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getMinutesKeyword_1_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DAY__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDAYAccess().getMondayEnumLiteralDeclaration_0()); }
		('monday')
		{ after(grammarAccess.getDAYAccess().getMondayEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getTuesdayEnumLiteralDeclaration_1()); }
		('tuesday')
		{ after(grammarAccess.getDAYAccess().getTuesdayEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getWednesdayEnumLiteralDeclaration_2()); }
		('wednesday')
		{ after(grammarAccess.getDAYAccess().getWednesdayEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getThursdayEnumLiteralDeclaration_3()); }
		('thursday')
		{ after(grammarAccess.getDAYAccess().getThursdayEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getFridayEnumLiteralDeclaration_4()); }
		('friday')
		{ after(grammarAccess.getDAYAccess().getFridayEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getSaturdayEnumLiteralDeclaration_5()); }
		('saturday')
		{ after(grammarAccess.getDAYAccess().getSaturdayEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDAYAccess().getSundayEnumLiteralDeclaration_6()); }
		('sunday')
		{ after(grammarAccess.getDAYAccess().getSundayEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TYPES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTYPESAccess().getHydroEnumLiteralDeclaration_0()); }
		('idro_level')
		{ after(grammarAccess.getTYPESAccess().getHydroEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTYPESAccess().getTemperatureEnumLiteralDeclaration_1()); }
		('temp')
		{ after(grammarAccess.getTYPESAccess().getTemperatureEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTYPESAccess().getHumidityEnumLiteralDeclaration_2()); }
		('humidity')
		{ after(grammarAccess.getTYPESAccess().getHumidityEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTYPESAccess().getWindEnumLiteralDeclaration_3()); }
		('wind')
		{ after(grammarAccess.getTYPESAccess().getWindEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTYPESAccess().getRainEnumLiteralDeclaration_4()); }
		('rain')
		{ after(grammarAccess.getTYPESAccess().getRainEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameKeyword_1()); }
	'name'
	{ after(grammarAccess.getSensorAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_2()); }
	(rule__Sensor__NameAssignment_2)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getInfosKeyword_3()); }
	'infos'
	{ after(grammarAccess.getSensorAccess().getInfosKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
	rule__Sensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getInfosAssignment_5()); }
	(rule__Sensor__InfosAssignment_5)
	{ after(grammarAccess.getSensorAccess().getInfosAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__6__Impl
	rule__Sensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__7__Impl
	rule__Sensor__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNetworkKeyword_7()); }
	'network'
	{ after(grammarAccess.getSensorAccess().getNetworkKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__8__Impl
	rule__Sensor__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__9__Impl
	rule__Sensor__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNetworkAssignment_9()); }
	(rule__Sensor__NetworkAssignment_9)
	{ after(grammarAccess.getSensorAccess().getNetworkAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__10__Impl
	rule__Sensor__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__11__Impl
	rule__Sensor__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGatewayKeyword_11()); }
	'gateway'
	{ after(grammarAccess.getSensorAccess().getGatewayKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__12__Impl
	rule__Sensor__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_12()); }
	'{'
	{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__13__Impl
	rule__Sensor__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGatewayAssignment_13()); }
	(rule__Sensor__GatewayAssignment_13)
	{ after(grammarAccess.getSensorAccess().getGatewayAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__14__Impl
	rule__Sensor__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__15__Impl
	rule__Sensor__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getCronjobKeyword_15()); }
	'cronjob'
	{ after(grammarAccess.getSensorAccess().getCronjobKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__16__Impl
	rule__Sensor__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_16()); }
	'{'
	{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__17__Impl
	rule__Sensor__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getCronjobAssignment_17()); }
	(rule__Sensor__CronjobAssignment_17)
	{ after(grammarAccess.getSensorAccess().getCronjobAssignment_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__18__Impl
	rule__Sensor__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_18()); }
	'}'
	{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__19__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_19()); }
	'}'
	{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralNetworkInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralNetworkInfo__Group__0__Impl
	rule__GeneralNetworkInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralNetworkInfoAccess().getPortKeyword_0()); }
	'port'
	{ after(grammarAccess.getGeneralNetworkInfoAccess().getPortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralNetworkInfo__Group__1__Impl
	rule__GeneralNetworkInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralNetworkInfoAccess().getPortAssignment_1()); }
	(rule__GeneralNetworkInfo__PortAssignment_1)
	{ after(grammarAccess.getGeneralNetworkInfoAccess().getPortAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralNetworkInfo__Group__2__Impl
	rule__GeneralNetworkInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralNetworkInfoAccess().getIpKeyword_2()); }
	'ip'
	{ after(grammarAccess.getGeneralNetworkInfoAccess().getIpKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralNetworkInfo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralNetworkInfoAccess().getIpAssignment_3()); }
	(rule__GeneralNetworkInfo__IpAssignment_3)
	{ after(grammarAccess.getGeneralNetworkInfoAccess().getIpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralSensorInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__0__Impl
	rule__GeneralSensorInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getDescriptionKeyword_0()); }
	'description'
	{ after(grammarAccess.getGeneralSensorInfoAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__1__Impl
	rule__GeneralSensorInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getDescriptionAssignment_1()); }
	(rule__GeneralSensorInfo__DescriptionAssignment_1)
	{ after(grammarAccess.getGeneralSensorInfoAccess().getDescriptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__2__Impl
	rule__GeneralSensorInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getGeneralSensorInfoAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__3__Impl
	rule__GeneralSensorInfo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getTypeAssignment_3()); }
	(rule__GeneralSensorInfo__TypeAssignment_3)
	{ after(grammarAccess.getGeneralSensorInfoAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__4__Impl
	rule__GeneralSensorInfo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getQueriesKeyword_4()); }
	'queries'
	{ after(grammarAccess.getGeneralSensorInfoAccess().getQueriesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__5__Impl
	rule__GeneralSensorInfo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getLeftSquareBracketKeyword_5()); }
	'['
	{ after(grammarAccess.getGeneralSensorInfoAccess().getLeftSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__6__Impl
	rule__GeneralSensorInfo__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getQueryAssignment_6()); }
	(rule__GeneralSensorInfo__QueryAssignment_6)*
	{ after(grammarAccess.getGeneralSensorInfoAccess().getQueryAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralSensorInfo__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralSensorInfoAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getGeneralSensorInfoAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralGatewayInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__0__Impl
	rule__GeneralGatewayInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getUrlKeyword_0()); }
	'url'
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getUrlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__1__Impl
	rule__GeneralGatewayInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getUrlAssignment_1()); }
	(rule__GeneralGatewayInfo__UrlAssignment_1)
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__2__Impl
	rule__GeneralGatewayInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getRegisterRouteKeyword_2()); }
	'registerRoute'
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getRegisterRouteKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__3__Impl
	rule__GeneralGatewayInfo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getRegisterAssignment_3()); }
	(rule__GeneralGatewayInfo__RegisterAssignment_3)
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getRegisterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__4__Impl
	rule__GeneralGatewayInfo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getShutdownRouteKeyword_4()); }
	'shutdownRoute'
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getShutdownRouteKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__5__Impl
	rule__GeneralGatewayInfo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getShutdownAssignment_5()); }
	(rule__GeneralGatewayInfo__ShutdownAssignment_5)
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getShutdownAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__6__Impl
	rule__GeneralGatewayInfo__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getDetectionRouteKeyword_6()); }
	'detectionRoute'
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getDetectionRouteKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__7__Impl
	rule__GeneralGatewayInfo__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getDetectionAssignment_7()); }
	(rule__GeneralGatewayInfo__DetectionAssignment_7)
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getDetectionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__8__Impl
	rule__GeneralGatewayInfo__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getAlertRouteKeyword_8()); }
	'alertRoute'
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getAlertRouteKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralGatewayInfo__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralGatewayInfoAccess().getAlertAssignment_9()); }
	(rule__GeneralGatewayInfo__AlertAssignment_9)
	{ after(grammarAccess.getGeneralGatewayInfoAccess().getAlertAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCronjobInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group__0__Impl
	rule__GeneralCronjobInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_0()); }
	(rule__GeneralCronjobInfo__Alternatives_0)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_1()); }
	(rule__GeneralCronjobInfo__Alternatives_1)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCronjobInfo__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_0__0__Impl
	rule__GeneralCronjobInfo__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getFromKeyword_0_0_0()); }
	'from'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getFromKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_0__1__Impl
	rule__GeneralCronjobInfo__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getFromAssignment_0_0_1()); }
	(rule__GeneralCronjobInfo__FromAssignment_0_0_1)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getFromAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_0__2__Impl
	rule__GeneralCronjobInfo__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getToKeyword_0_0_2()); }
	'to'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getToKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getToAssignment_0_0_3()); }
	(rule__GeneralCronjobInfo__ToAssignment_0_0_3)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getToAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCronjobInfo__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_1__0__Impl
	rule__GeneralCronjobInfo__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getEveryKeyword_0_1_0()); }
	'every'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getEveryKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getDayAssignment_0_1_1()); }
	(rule__GeneralCronjobInfo__DayAssignment_0_1_1)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getDayAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCronjobInfo__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_0__0__Impl
	rule__GeneralCronjobInfo__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getAtKeyword_1_0_0()); }
	'at'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getAtKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_0__1__Impl
	rule__GeneralCronjobInfo__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getHourAssignment_1_0_1()); }
	(rule__GeneralCronjobInfo__HourAssignment_1_0_1)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getHourAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_0__2__Impl
	rule__GeneralCronjobInfo__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getColonKeyword_1_0_2()); }
	':'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getColonKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getMinuteAssignment_1_0_3()); }
	(rule__GeneralCronjobInfo__MinuteAssignment_1_0_3)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getMinuteAssignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralCronjobInfo__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_1__0__Impl
	rule__GeneralCronjobInfo__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getEveryKeyword_1_1_0()); }
	'every'
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getEveryKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_1__1__Impl
	rule__GeneralCronjobInfo__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getValueAssignment_1_1_1()); }
	(rule__GeneralCronjobInfo__ValueAssignment_1_1_1)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getValueAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralCronjobInfo__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_1_1_2()); }
	(rule__GeneralCronjobInfo__Alternatives_1_1_2)
	{ after(grammarAccess.getGeneralCronjobInfoAccess().getAlternatives_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getQueryAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getThresholdKeyword_1()); }
	'threshold'
	{ after(grammarAccess.getQueryAccess().getThresholdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_2()); }
	(rule__Query__NameAssignment_2)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getComparatorAssignment_3()); }
	(rule__Query__ComparatorAssignment_3)
	{ after(grammarAccess.getQueryAccess().getComparatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getValueAssignment_4()); }
	(rule__Query__ValueAssignment_4)
	{ after(grammarAccess.getQueryAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDefinition__SensorAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorDefinitionAccess().getSensorSensorParserRuleCall_0()); }
		ruleSensor
		{ after(grammarAccess.getSensorDefinitionAccess().getSensorSensorParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSensorAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__InfosAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getInfosGeneralSensorInfoParserRuleCall_5_0()); }
		ruleGeneralSensorInfo
		{ after(grammarAccess.getSensorAccess().getInfosGeneralSensorInfoParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NetworkAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNetworkGeneralNetworkInfoParserRuleCall_9_0()); }
		ruleGeneralNetworkInfo
		{ after(grammarAccess.getSensorAccess().getNetworkGeneralNetworkInfoParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__GatewayAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getGatewayGeneralGatewayInfoParserRuleCall_13_0()); }
		ruleGeneralGatewayInfo
		{ after(grammarAccess.getSensorAccess().getGatewayGeneralGatewayInfoParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__CronjobAssignment_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getCronjobGeneralCronjobInfoParserRuleCall_17_0()); }
		ruleGeneralCronjobInfo
		{ after(grammarAccess.getSensorAccess().getCronjobGeneralCronjobInfoParserRuleCall_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__PortAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralNetworkInfoAccess().getPortINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGeneralNetworkInfoAccess().getPortINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralNetworkInfo__IpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralNetworkInfoAccess().getIpSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralNetworkInfoAccess().getIpSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__DescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSensorInfoAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralSensorInfoAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSensorInfoAccess().getTypeTYPESEnumRuleCall_3_0()); }
		ruleTYPES
		{ after(grammarAccess.getGeneralSensorInfoAccess().getTypeTYPESEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralSensorInfo__QueryAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralSensorInfoAccess().getQueryQueryParserRuleCall_6_0()); }
		ruleQuery
		{ after(grammarAccess.getGeneralSensorInfoAccess().getQueryQueryParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getUrlSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getUrlSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__RegisterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getRegisterSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getRegisterSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__ShutdownAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getShutdownSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getShutdownSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__DetectionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getDetectionSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getDetectionSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralGatewayInfo__AlertAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralGatewayInfoAccess().getAlertSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralGatewayInfoAccess().getAlertSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__FromAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getFromDAYEnumRuleCall_0_0_1_0()); }
		ruleDAY
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getFromDAYEnumRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__ToAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getToDAYEnumRuleCall_0_0_3_0()); }
		ruleDAY
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getToDAYEnumRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__DayAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getDayDAYEnumRuleCall_0_1_1_0()); }
		ruleDAY
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getDayDAYEnumRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__HourAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getHourINTTerminalRuleCall_1_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getHourINTTerminalRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__MinuteAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getMinuteINTTerminalRuleCall_1_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getMinuteINTTerminalRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralCronjobInfo__ValueAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralCronjobInfoAccess().getValueINTTerminalRuleCall_1_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGeneralCronjobInfoAccess().getValueINTTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getQueryAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ComparatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getComparatorComparatorEnumRuleCall_3_0()); }
		ruleComparator
		{ after(grammarAccess.getQueryAccess().getComparatorComparatorEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getValueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getQueryAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
